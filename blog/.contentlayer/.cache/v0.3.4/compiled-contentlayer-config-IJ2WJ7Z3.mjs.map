{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from \"contentlayer/source-files\";\n\nexport const Post = defineDocumentType(() => ({\n  name: \"Post\",\n  filePathPattern: `**/*.md`,\n  contentType: \"markdown\",\n  fields: {\n    title: {\n      type: \"string\",\n      required: false,\n      description: \"\uD3EC\uC2A4\uD2B8 \uC81C\uBAA9 (\uD30C\uC77C\uBA85\uC5D0\uC11C \uC790\uB3D9 \uCD94\uCD9C)\",\n    },\n    date: {\n      type: \"date\",\n      required: false,\n      description: \"\uC791\uC131\uC77C (\uD30C\uC77C \uC218\uC815\uC77C\uC5D0\uC11C \uC790\uB3D9 \uCD94\uCD9C)\",\n    },\n    category: {\n      type: \"string\",\n      required: false,\n      description: \"\uCE74\uD14C\uACE0\uB9AC (\uD3F4\uB354\uBA85\uC5D0\uC11C \uC790\uB3D9 \uCD94\uCD9C)\",\n    },\n    tags: {\n      type: \"list\",\n      of: { type: \"string\" },\n      required: false,\n      description: \"\uD0DC\uADF8 \uBAA9\uB85D\",\n    },\n    description: {\n      type: \"string\",\n      required: false,\n      description: \"\uD3EC\uC2A4\uD2B8 \uC124\uBA85\",\n    },\n  },\n  computedFields: {\n    url: {\n      type: \"string\",\n      resolve: (post) => `/posts/${post._raw.flattenedPath}`,\n    },\n    slug: {\n      type: \"string\",\n      resolve: (post) => post._raw.flattenedPath,\n    },\n    category: {\n      type: \"string\",\n      resolve: (post) => {\n        const pathParts = post._raw.flattenedPath.split(\"/\");\n        return pathParts.length > 1 ? pathParts[0] : \"general\";\n      },\n    },\n    title: {\n      type: \"string\",\n      resolve: (post) => {\n        // frontmatter\uC5D0 title\uC774 \uC788\uC73C\uBA74 \uC0AC\uC6A9, \uC5C6\uC73C\uBA74 \uD30C\uC77C\uBA85\uC5D0\uC11C \uCD94\uCD9C\n        if (post.title) return post.title;\n        const pathParts = post._raw.flattenedPath.split(\"/\");\n        const fileName = pathParts[pathParts.length - 1];\n        return fileName.replace(/^\\d{4}-\\d{2}-\\d{2}-/, \"\").replace(/-/g, \" \");\n      },\n    },\n    readingTime: {\n      type: \"number\",\n      resolve: (post) => {\n        const wordsPerMinute = 200;\n        const words = post.body.raw.split(/\\s+/).length;\n        return Math.ceil(words / wordsPerMinute);\n      },\n    },\n  },\n}));\n\nexport default makeSource({\n  contentDirPath: \"../documents\", // TIL/documents \uD3F4\uB354\uB97C \uC18C\uC2A4\uB85C \uC0AC\uC6A9\n  documentTypes: [Post],\n  disableImportAliasWarning: true,\n});\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAExC,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,MACV,aAAa;AAAA,IACf;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,MACV,aAAa;AAAA,IACf;AAAA,IACA,UAAU;AAAA,MACR,MAAM;AAAA,MACN,UAAU;AAAA,MACV,aAAa;AAAA,IACf;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,IAAI,EAAE,MAAM,SAAS;AAAA,MACrB,UAAU;AAAA,MACV,aAAa;AAAA,IACf;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,MACN,UAAU;AAAA,MACV,aAAa;AAAA,IACf;AAAA,EACF;AAAA,EACA,gBAAgB;AAAA,IACd,KAAK;AAAA,MACH,MAAM;AAAA,MACN,SAAS,CAAC,SAAS,UAAU,KAAK,KAAK,aAAa;AAAA,IACtD;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,SAAS,CAAC,SAAS,KAAK,KAAK;AAAA,IAC/B;AAAA,IACA,UAAU;AAAA,MACR,MAAM;AAAA,MACN,SAAS,CAAC,SAAS;AACjB,cAAM,YAAY,KAAK,KAAK,cAAc,MAAM,GAAG;AACnD,eAAO,UAAU,SAAS,IAAI,UAAU,CAAC,IAAI;AAAA,MAC/C;AAAA,IACF;AAAA,IACA,OAAO;AAAA,MACL,MAAM;AAAA,MACN,SAAS,CAAC,SAAS;AAEjB,YAAI,KAAK;AAAO,iBAAO,KAAK;AAC5B,cAAM,YAAY,KAAK,KAAK,cAAc,MAAM,GAAG;AACnD,cAAM,WAAW,UAAU,UAAU,SAAS,CAAC;AAC/C,eAAO,SAAS,QAAQ,uBAAuB,EAAE,EAAE,QAAQ,MAAM,GAAG;AAAA,MACtE;AAAA,IACF;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,MACN,SAAS,CAAC,SAAS;AACjB,cAAM,iBAAiB;AACvB,cAAM,QAAQ,KAAK,KAAK,IAAI,MAAM,KAAK,EAAE;AACzC,eAAO,KAAK,KAAK,QAAQ,cAAc;AAAA,MACzC;AAAA,IACF;AAAA,EACF;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,2BAA2B;AAC7B,CAAC;",
  "names": []
}
